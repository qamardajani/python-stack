>>> from bookapp.models import *
>>> Books.objects.create(title="C sharp" , desc="programming language")
<Books: Books object (1)>
>>> Books.objects.create(title="java" , desc="programming language")
<Books: Books object (2)>
>>> Books.objects.create(title="python" , desc="programming language")
<Books: Books object (3)>
>>> Books.objects.create(title="php" , desc="programming language")
<Books: Books object (4)>
>>> Books.objects.create(title="ruby" , desc="programming language")
<Books: Books object (5)>
>>> Authors.objects.create(first_name="Jane" , last_name="Austen")
<Authors: Authors object (1)>
>>> Authors.objects.create(first_name="Emily" , last_name="Dickinson")
<Authors: Authors object (2)>
>>> Authors.objects.create(first_name="Fyodor" , last_name="Dostoevsky")
<Authors: Authors object (3)>
>>> Authors.objects.create(first_name="William" , last_name="Shakespeare")
<Authors: Authors object (4)>
>>> Authors.objects.create(first_name="lau" , last_name="Tzu")
<Authors: Authors object (5)>
>>> exit()
>>> from bookapp.models import *
>>> book_update=Books.objects.get(id=1)
>>> book_update.title="c#"
>>> book_update.save()
>>> author_update=Authors.objects.get(id=4)
>>> author_update.first_name="Bill"
>>> author_update.save()
>>> Authors.objects.all()
<QuerySet [<Authors: Authors object (1)>, <Authors: Authors object (2)>, <Authors: Authors object (3)>, <Authors: Authors object (4)>, <Authors: Authors object (5)>]>
>>> first_author=Authors.objects.get(id=1)
>>> first_author.books_authors.add(Books.objects.get(id=1))
>>> first_author.books_authors.add(Books.objects.get(id=2))
>>> second_author=Authors.objects.get(id=1)
>>> second_author.books_authors.add(Books.objects.get(id=1))
>>> second_author.books_authors.add(Books.objects.get(id=2))
>>> second_author.books_authors.add(Books.objects.get(id=3))
>>> third_author=Authors.objects.get(id=1)
>>> second_author.books_authors.remove(Books.objects.get(id=3))
>>> second_author=Authors.objects.get(id=2)
>>> second_author.books_authors.add(Books.objects.get(id=1))
>>> second_author.books_authors.add(Books.objects.get(id=2))
>>> second_author.books_authors.add(Books.objects.get(id=3))
>>> third_author=Authors.objects.get(id=3)
>>> third_author.books_authors.add(Books.objects.get(id=1))
>>> third_author.books_authors.add(Books.objects.get(id=2))
>>> third_author.books_authors.add(Books.objects.get(id=3))
>>> third_author.books_authors.add(Books.objects.get(id=4))
>>> forth_author=Authors.objects.get(id=4)
>>> forth_author.books_authors.add(Books.objects.get(id=1))
>>> forth_author.books_authors.add(Books.objects.get(id=2))
>>> forth_author.books_authors.add(Books.objects.get(id=3))
>>> forth_author.books_authors.add(Books.objects.get(id=4))
>>> forth_author.books_authors.add(Books.objects.get(id=5))
>>> Authors.objects.filter(books_authors=3)
<QuerySet [<Authors: Authors object (2)>, <Authors: Authors object (3)>, <Authors: Authors object (4)>]>
>>> x=Books.objects.get(id=3)
>>> y=Authors.objects.get(id=1)
>>> x.authors.remove(y)
>>> x=Authors.objects.get(id=3)
>>> x.books_authors.all()
<QuerySet [<Books: Books object (1)>, <Books: Books object (2)>, <Books: Books object (3)>, <Books: Books object (4)>]>
>>> x=Books.objects.get(id=5)
>>> x.authors.all()
<QuerySet [<Authors: Authors object (4)>]>